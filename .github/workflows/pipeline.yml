name: CD Pipeline

on:
  workflow_run:
    workflows: ["Docker Image CI"]
    types:
      - completed

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
      - name: Create .env file
        run: |
          echo "NODE_ENV=production" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          # Add any other environment variables here
        
      - name: Debug - Print .env contents
        run: |
          echo "Contents of .env file:"
          cat .env
      
      - name: Debug - Check if .env file exists
        run: |
          if [ -f ".env" ]; then
            echo ".env file exists"
          else
            echo ".env file does not exist"
          fi
      
      - name: Pull Docker image
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ezcryptoexchange:latest

      - name: Delete Old docker container
        run: sudo docker rm -f ezcryptoexchange || true

      - name: Run Docker Container
        run: |
          sudo docker run -d \
            -p 3001:3001 \
            --name ezcryptoexchange \
            --env-file .env \
            ${{ secrets.DOCKERHUB_USERNAME }}/ezcryptoexchange

      - name: Debug - Check container logs
        run: sudo docker logs ezcryptoexchange

      - name: Debug - Print container environment variables
        run: sudo docker exec ezcryptoexchange env

      - name: Debug - Check if application can access environment variables
        run: |
          sudo docker exec ezcryptoexchange node -e "console.log('MYSQL_HOST:', process.env.MYSQL_HOST)"
          sudo docker exec ezcryptoexchange node -e "console.log('NODE_ENV:', process.env.NODE_ENV)"